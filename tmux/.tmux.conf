### Look and FEEL
set-option -g default-terminal screen-256color

# default status bar colors
set-option -g status-bg colour235
set-option -g status-fg colour179
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour244
set-window-option -g window-status-bg default

# active window title colors
set-window-option -g window-status-current-fg colour166
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour235
set-option -g pane-active-border-fg colour240
set-option -g pane-active-border-bg black

# pane number display
set-option -g display-panes-active-colour colour33
set-option -g display-panes-colour colour166

# clock
set-window-option -g clock-mode-colour colour64

# status bar contents
set-option -g automatic-rename-format '#(basename #{pane_current_path})'
set-option -g status-left-length 40
set-option -g status-left '#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P'
set-option -g status-right-length 30
set-option -g status-right '#[fg=default][%Y-%b-%d %H:%M]'
# set-option -g status-utf8 on
set-option -g status-interval 2
# centering the window list
set-option -g status-justify centre
set-option -g base-index 1
setw -g pane-base-index 1
setw -g monitor-activity on
set -g visual-activity on

# Automatically set window title
set-window-option -g automatic-rename on
# set-window-option -g utf8 on

set-option -g renumber-windows on
set-option -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# no command delay
set-option -sg escape-time 0


# KEYS

unbind C-b
set-option -g prefix 'M-='
bind 'M-=' send-prefix

bind C-s choose-session

# split panes using | and -
unbind '"'
bind | split-window -h -c '#{pane_current_path}'
unbind %
bind - split-window -v -c '#{pane_current_path}'

unbind {
bind { swap-pane -D
unbind }
bind } swap-pane -U

unbind c
bind c new-window -c '#{pane_current_path}'


# vi-mode pane move
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# resize pane
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5



# window circle
unbind [
bind [ previous-window
unbind ]
bind ] next-window


# copy and paste
bind Escape copy-mode
setw -g mode-keys vi
# old way, not used any more
# bind -t vi-copy 'v' begin-selection
# bind -t vi-copy 'y' copy-selection
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection

unbind p
bind p paste-buffer
# working with clipboard in linux and osx
#bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
#bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

# before use it, brew install reattach-to-user-namespace
bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
bind C-v run "tmux set-buffer \"$(reattach-to-user-namespace pbpaste)\"; tmux paste-buffer"



# reload config file
unbind r
bind r source-file ~/.tmux.conf \; display 'reloaded'



# bind C-q command-prompt -I "htop" -p "Quick window command: " "new-window '%%'"

